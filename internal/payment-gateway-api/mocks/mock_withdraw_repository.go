// Code generated by MockGen. DO NOT EDIT.
// Source: PaymentGateway/internal/payment-gateway-api/repositories (interfaces: WithdrawRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	domains "PaymentGateway/internal/payment-gateway-api/domains"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockWithdrawRepository is a mock of WithdrawRepository interface.
type MockWithdrawRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWithdrawRepositoryMockRecorder
}

// MockWithdrawRepositoryMockRecorder is the mock recorder for MockWithdrawRepository.
type MockWithdrawRepositoryMockRecorder struct {
	mock *MockWithdrawRepository
}

// NewMockWithdrawRepository creates a new mock instance.
func NewMockWithdrawRepository(ctrl *gomock.Controller) *MockWithdrawRepository {
	mock := &MockWithdrawRepository{ctrl: ctrl}
	mock.recorder = &MockWithdrawRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWithdrawRepository) EXPECT() *MockWithdrawRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockWithdrawRepository) Create(arg0 context.Context, arg1 *domains.Withdraw) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockWithdrawRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockWithdrawRepository)(nil).Create), arg0, arg1)
}

// GetById mocks base method.
func (m *MockWithdrawRepository) GetById(arg0 context.Context, arg1 uuid.UUID) (*domains.Withdraw, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", arg0, arg1)
	ret0, _ := ret[0].(*domains.Withdraw)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockWithdrawRepositoryMockRecorder) GetById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockWithdrawRepository)(nil).GetById), arg0, arg1)
}

// Update mocks base method.
func (m *MockWithdrawRepository) Update(arg0 context.Context, arg1 *domains.Withdraw) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockWithdrawRepositoryMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockWithdrawRepository)(nil).Update), arg0, arg1)
}
